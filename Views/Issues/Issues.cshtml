@model SGCTicketSystem.ViewModels.IssuesVsViewModel
@{
    ViewBag.Title = "Issues";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Issues</h2>

@using (Html.BeginForm("SaveIssues", "Issues"))
{
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Issuess.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Issuess.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Issuess.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issuess.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Issuess.Comments, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issuess.OpenedBy, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Issuess.OpenedBy, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issuess.OpenedDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Issuess.OpenedDate, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issuess.AssignedTo, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.Issuess.AssignedTo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Issuess.AssignedTo, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issuess.RelatedIssues, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.Issuess.RelatedIssues, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Issuess.RelatedIssues, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issuess.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Issuess.DueDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Issuess.DueDate, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Issuess.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Issuess.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Issuess.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issuess.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Issuess.CategoryId, new SelectList(Model.Categories, "CategoryId", "Description"), "Select Category", htmlAttributes: new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issuess.Branch, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Issuess.BranchId, new SelectList(Model.Branches, "BranchId", "BranchName"), "Select Branch", htmlAttributes: new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issuess.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Issuess.StatusId, new SelectList(Model.Statuses, "StatusId", "StatusDescription"), "Select Status", htmlAttributes: new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issuess.Department, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Issuess.DepartmentId, new SelectList(Model.Departments, "Departmentid", "DepartmentName"), "Select Department", htmlAttributes: new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issuess.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Issuess.PriorityId, new SelectList(Model.Priorities, "PriorityId", "PriorityCategory"), "Select Priority", htmlAttributes: new { @class = "form-control" })
        </div>
    </div>


    @Html.HiddenFor(model => model.Issuess.IssuesId)
    @Html.AntiForgeryToken()

    <div class="col-md-offset-0">
        <input type="submit" value="Send Ticket" class="btn-default" />
    </div>


    @Html.ActionLink("Back to List", "Index")

</div>
        
}